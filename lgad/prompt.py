from typing import List


PROMPTS = {
    "digit": [
        "{}",
        "a number {}",
        "an image of {}",
        "a picture of {}",
        "a photo of {}",
        "a drawing of {}",
        "a sketch of {}",
        "a figure of {}",
        "{} letter",
        "a number {} letter",
        "a image of {} letter",
        "a picture of {} letter",
        "a photo of {} letter",
        "a drawing of {} letter",
        "a sketch of {} letter",
        "a figure of {} letter",
        "a letter of {}",
        "a letter of number {}",
        "a photo of the number: '{}'.",  # ref: https://github.com/openai/CLIP/issues/164#issue-1037665323
        # reference: https://github.com/openai/CLIP/blob/main/notebooks/Prompt_Engineering_for_ImageNet.ipynb
        # 'a bad photo of a {}.',
        # 'a photo of many {}.',
        # 'a sculpture of a {}.',
        # 'a photo of the hard to see {}.',
        # 'a low resolution photo of the {}.',
        # 'a rendering of a {}.',
        # 'graffiti of a {}.',
        # 'a bad photo of the {}.',
        # 'a cropped photo of the {}.',
        # 'a tattoo of a {}.',
        # 'the embroidered {}.',
        # 'a photo of a hard to see {}.',
        # 'a bright photo of a {}.',
        # 'a photo of a clean {}.',
        # 'a photo of a dirty {}.',
        # 'a dark photo of the {}.',
        # 'a drawing of a {}.',
        # 'a photo of my {}.',
        # 'the plastic {}.',
        # 'a photo of the cool {}.',
        # 'a close-up photo of a {}.',
        # 'a black and white photo of the {}.',
        # 'a painting of the {}.',
        # 'a painting of a {}.',
        # 'a pixelated photo of the {}.',
        # 'a sculpture of the {}.',
        # 'a bright photo of the {}.',
        # 'a cropped photo of a {}.',
        # 'a plastic {}.',
        # 'a photo of the dirty {}.',
        # 'a jpeg corrupted photo of a {}.',
        # 'a blurry photo of the {}.',
        # 'a photo of the {}.',
        # 'a good photo of the {}.',
        # 'a rendering of the {}.',
        # 'a {} in a video game.',
        # 'a photo of one {}.',
        # 'a doodle of a {}.',
        # 'a close-up photo of the {}.',
        # 'a photo of a {}.',
        # 'the origami {}.',
        # 'the {} in a video game.',
        # 'a sketch of a {}.',
        # 'a doodle of the {}.',
        # 'a origami {}.',
        # 'a low resolution photo of a {}.',
        # 'the toy {}.',
        # 'a rendition of the {}.',
        # 'a photo of the clean {}.',
        # 'a photo of a large {}.',
        # 'a rendition of a {}.',
        # 'a photo of a nice {}.',
        # 'a photo of a weird {}.',
        # 'a blurry photo of a {}.',
        # 'a cartoon {}.',
        # 'art of a {}.',
        # 'a sketch of the {}.',
        # 'a embroidered {}.',
        # 'a pixelated photo of a {}.',
        # 'itap of the {}.',
        # 'a jpeg corrupted photo of the {}.',
        # 'a good photo of a {}.',
        # 'a plushie {}.',
        # 'a photo of the nice {}.',
        # 'a photo of the small {}.',
        # 'a photo of the weird {}.',
        # 'the cartoon {}.',
        # 'art of the {}.',
        # 'a drawing of the {}.',
        # 'a photo of the large {}.',
        # 'a black and white photo of a {}.',
        # 'the plushie {}.',
        # 'a dark photo of a {}.',
        # 'itap of a {}.',
        # 'graffiti of the {}.',
        # 'a toy {}.',
        # 'itap of my {}.',
        # 'a photo of a cool {}.',
        # 'a photo of a small {}.',
        # 'a tattoo of the {}.',

    ],
    "saliency": [
        "{}",
        "a picture of {}",
        "a photo of {}",
        "a drawing of {}",
        "a sketch of {}",
        "a figure of {}",
        "a photo of the {}",
        "a drawing of the {}",
        "a sketch of the {}",
        "a figure of the {}",
        "a photo of the {}",
    ],
}
def generate_prompt(word_list: List[str], word_type: str = "digit"):
    assert word_type in PROMPTS
    _prompts = []
    for word in word_list:
        for prompt in PROMPTS[word_type]:
            _prompts.append(prompt.format(word))
    return _prompts


if __name__ == "__main__":
    prompts = generate_prompt(
        [
            "1",
            "2",
            "3",
        ],
        word_type="digit",
    )
    print(prompts)
